{"version":3,"file":"DocumentService-dd0c20c8.js","sources":["../../src/components/document/DocumentService.ts"],"sourcesContent":["import { ResponseError } from \"@/services/ErrorDecoder\";\nimport { QueryMaker, type IResponse } from \"@/services/QueryMaker\";\nimport type { IDocument } from \"./interfaces/IDocument\";\n\ninterface IDocumentGetAllResponse extends IResponse {\n  documents: IDocument[];\n}\n\ninterface IDocumentGetOneResponse extends IResponse {\n  document: IDocument;\n}\n\ninterface IDocumentCreateResponse extends IResponse {\n  documentId: string;\n}\n\ninterface DocumentPayload {\n  /** (optional) for document edit */\n  id?: string;\n  type: number;\n  title: string;\n  description: string;\n  expiresAt: Date;\n}\n\nexport class DocumentService {\n  /**\n   * Delete document and all its associated notifications\n   * @param documentId\n   * @returns\n   */\n  public static async deleteOne(documentId: string): Promise<void> {\n    const res = await new QueryMaker({\n      route: `/documents/${documentId}/delete`,\n    }).delete();\n    const { error, message } = res.data;\n\n    if (error) {\n      throw new ResponseError(message);\n    }\n  }\n\n  /**\n   * Get all documents for current user\n   * @returns Array of documents\n   */\n  public static async getAll(): Promise<IDocument[]> {\n    const res = await new QueryMaker({\n      route: \"/documents\",\n    }).get<IDocumentGetAllResponse>();\n    const { error, message, documents } = res.data;\n\n    if (error) {\n      throw new ResponseError(message);\n    }\n\n    // Short date format\n    for (const d of documents) {\n      d.expiresAt = this.getDate(d.expiresAt);\n    }\n\n    return documents;\n  }\n\n  public static async getOne(documentId: string): Promise<IDocument> {\n    const res = await new QueryMaker({\n      route: `/documents/${documentId}`,\n    }).get<IDocumentGetOneResponse>();\n    const { error, message, document } = res.data;\n\n    if (error) {\n      throw new ResponseError(message);\n    }\n\n    // Short date format\n    document.expiresAt = this.getDate(document.expiresAt);\n\n    return document;\n  }\n\n  public static async createOne(document: DocumentPayload): Promise<string> {\n    const payload = JSON.stringify(document);\n\n    const res = await new QueryMaker({\n      route: \"/documents/create\",\n      payload,\n    }).post<IDocumentCreateResponse>();\n    const { error, message, documentId } = res.data;\n\n    if (error) {\n      throw new ResponseError(message);\n    }\n\n    return documentId;\n  }\n\n  public static async updateOne(document: DocumentPayload): Promise<void> {\n    const payload = JSON.stringify(document);\n\n    const res = await new QueryMaker({\n      route: \"/documents/edit\",\n      payload,\n    }).patch<IDocumentCreateResponse>();\n    const { error, message } = res.data;\n\n    if (error) {\n      throw new ResponseError(message);\n    }\n  }\n\n  /**\n   * Return date in YYYY-MM-DD format\n   * @param dateStr\n   * @returns\n   */\n  private static getDate(dateStr: string): string {\n    return new Date(dateStr).toISOString().substring(0, 10);\n  }\n}\n"],"names":["DocumentService","documentId","res","QueryMaker","error","message","ResponseError","documents","d","document","payload","dateStr"],"mappings":"+CAyBA,MAAAA,CAAA,CAMA,aAAA,UAAAC,EAAA,CACA,MAAAC,EAAA,MAAA,IAAAC,EAAA,CACA,MAAA,cAAAF,UAAA,CACA,EAAA,OAAA,EACA,CAAA,MAAAG,EAAA,QAAAC,GAAAH,EAAA,KAEA,GAAAE,EACA,MAAA,IAAAE,EAAAD,CAAA,CAEA,CAMA,aAAA,QAAA,CACA,MAAAH,EAAA,MAAA,IAAAC,EAAA,CACA,MAAA,YAAA,CACA,EAAA,IAAA,EACA,CAAA,MAAAC,EAAA,QAAAC,EAAA,UAAAE,CAAA,EAAAL,EAAA,KAEA,GAAAE,EACA,MAAA,IAAAE,EAAAD,CAAA,EAIA,UAAAG,KAAAD,EACAC,EAAA,UAAA,KAAA,QAAAA,EAAA,SAAA,EAGA,OAAAD,CACA,CAEA,aAAA,OAAAN,EAAA,CACA,MAAAC,EAAA,MAAA,IAAAC,EAAA,CACA,MAAA,cAAAF,GAAA,CACA,EAAA,IAAA,EACA,CAAA,MAAAG,EAAA,QAAAC,EAAA,SAAAI,CAAA,EAAAP,EAAA,KAEA,GAAAE,EACA,MAAA,IAAAE,EAAAD,CAAA,EAIA,OAAAI,EAAA,UAAA,KAAA,QAAAA,EAAA,SAAA,EAEAA,CACA,CAEA,aAAA,UAAAA,EAAA,CACA,MAAAC,EAAA,KAAA,UAAAD,CAAA,EAEAP,EAAA,MAAA,IAAAC,EAAA,CACA,MAAA,oBACA,QAAAO,CAAA,CACA,EAAA,KAAA,EACA,CAAA,MAAAN,EAAA,QAAAC,EAAA,WAAAJ,CAAA,EAAAC,EAAA,KAEA,GAAAE,EACA,MAAA,IAAAE,EAAAD,CAAA,EAGA,OAAAJ,CACA,CAEA,aAAA,UAAAQ,EAAA,CACA,MAAAC,EAAA,KAAA,UAAAD,CAAA,EAEAP,EAAA,MAAA,IAAAC,EAAA,CACA,MAAA,kBACA,QAAAO,CAAA,CACA,EAAA,MAAA,EACA,CAAA,MAAAN,EAAA,QAAAC,GAAAH,EAAA,KAEA,GAAAE,EACA,MAAA,IAAAE,EAAAD,CAAA,CAEA,CAOA,OAAA,QAAAM,EAAA,CACA,OAAA,IAAA,KAAAA,CAAA,EAAA,YAAA,EAAA,UAAA,EAAA,EAAA,CACA,CACA"}